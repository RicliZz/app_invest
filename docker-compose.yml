networks:
  dev:


services:
  invest_app:
    build:
      context: .
    image: invest_app_image
    container_name: invest_app
    command: ["sh", "-c", "go run /usr/src/app/cmd/app/main.go"]
    depends_on:
      - postgres
    environment:
      DB_HOST: invest_postgres
      DB_USER: "${DB_USERNAME}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_NAME: "${DB_NAME}"
#      REDIS_HOST:
#      REDIS_PASSWORD:
    ports:
      - "8080:8080"
    networks:
      - dev

#  nginx:
#    image: nginx:stable-alpine
#    ports:
#      - "80:80"
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf
#    depends_on:
#      - invest_app
#    networks:
#      - dev

  postgres:
    image: postgres:latest
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    container_name: invest_postgres
    environment:
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - ./db/migrations:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "invest_db"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 1m
    restart: unless-stopped
    networks:
      - dev


#  redis:
#    image: redis:latest
#    container_name: invest_redis
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis_data:/var/lib/redis/data
#    command: [ "redis-server", "--requirepass", "ricliznedokyrill" ]
#    networks:
#      - dev

#  elasticsearch:
#    mem_limit: 4g
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
#    container_name: elasticsearch
#    environment:
#      - discovery.type=single-node
#      - xpack.security.enabled=true
#      - ES_JAVA_OPTS=-Xms2g -Xmx2g
#    ports:
#      - "9200:9200"
#    volumes:
#      - es_data:/var/lib/elasticsearch/data
#    networks:
#      - dev

volumes:
   postgres_data:
#   redis_data:
#  es_data:
